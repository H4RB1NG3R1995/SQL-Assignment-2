use mavenmovies;

-- Question 1: Retrieve the total number of rentals made in the Sakila database.

select count(*) as rental_count from rental;

-- Question 2: Find the average rental duration (in days) of movies rented from the Sakila database.

select avg(rental_duration) as avg_rental_duration from film;

-- Question 3: Display the first name and last name of customers in uppercase.

select upper(first_name) as firstname, upper(last_name) as lastname
from customer;

-- Question 4: Extract the month from the rental date and display it alongside the rental ID.

select rental_id, month(rental_date) as rental_month
from rental;

-- Question 5: Retrieve the count of rentals for each customer (display customer ID and the count of rentals).

select customer_id, count(rental_id) as count_of_rentals  
from rental
group by customer_id;

-- Question 6: Find the total revenue generated by each store.

select i.store_id, sum(amount) as total_revenue
from inventory as i
inner join rental as r on i.inventory_id = r.inventory_id
inner join payment as p on p.rental_id = r.rental_id
group by i.store_id;

-- Question 7: Display the title of the movie, customer s first name, and last name who rented it. 

select * from film;
select * from customer;
select * from rental;
select * from inventory;

select f.title, c.first_name, c.last_name
from film as f
inner join inventory as i on f.film_id = i.film_id
inner join rental as r on i.inventory_id = r.inventory_id
inner join customer as c on c.customer_id = r.customer_id;

-- Question 8: Retrieve the names of all actors who have appeared in the film GASLIGHT CRUSADE

select * from film;
select * from film_actor;
select * from actor;

select concat(a.first_name, " ", a.last_name) as name_of_actor 
from film as f
inner join film_actor as fa on f.film_id = fa.film_id
inner join actor as a on a.actor_id = fa.actor_id
where f.title = "GASLIGHT CRUSADE";

-- Question 1: Determine the total number of rentals for each category of movies.

select * from film_category;
select * from category;
select * from rental;
select * from inventory;
select * from film;

select c.name as category_name, count(r.rental_id) as number_of_rentals
from film as f
inner join film_category as fa on f.film_id = fa.film_id
inner join category as c on fa.category_id = c.category_id
inner join inventory as i on i.film_id = f.film_id
inner join rental as r on r.inventory_id = i.inventory_id
group by c.name;

-- Question 2: Find the average rental rate of movies in each language. 

select * from language;
select * from film;

select l.name as language_name, avg(f.rental_rate) as avg_rental_rate
from film as f
inner join language as l on f.language_id = l.language_id
group by l.name;

-- Question 3: Retrieve the customer names along with the total amount they've spent on rentals.

select * from customer;
select * from payment;

select c.first_name, c.last_name, sum(p.amount) as total_amount_spent
from customer as c
inner join payment as p on c.customer_id = p.customer_id
group by c.first_name, c.last_name;

-- Question 4: List the titles of movies rented by each customer in a particular city (e.g., 'London'). 

select * from customer;
select * from address;
select * from city;
select * from film;
select * from inventory;
select * from rental;

select title, first_name, last_name, city
from customer as c
inner join address as a on c.address_id = a.address_id
inner join city on city.city_id = a.city_id
inner join rental as r on r.customer_id = c.customer_id
inner join inventory as i on i.inventory_id = r.inventory_id
inner join film as f on f.film_id = i.film_id
where city.city = "London";

-- Question 5: Display the top 5 rented movies along with the number of times they've been rented. 

select * from film;
select * from inventory;
select * from rental;

select title, count(rental_id) as number_of_rentals
from film as f
inner join inventory as i on f.film_id = i.film_id
inner join rental as r on r.inventory_id = i.inventory_id
group by title
order by number_of_rentals desc
limit 5;

-- Question 6: Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).

select * from film;
select * from rental;
select * from customer;
select * from inventory;

select c.customer_id, first_name, last_name, i.store_id
from film as f
inner join inventory as i on f.film_id = i.film_id
inner join rental as r on r.inventory_id = i.inventory_id
inner join customer as c on c.customer_id = r.customer_id
where i.store_id in (1,2);